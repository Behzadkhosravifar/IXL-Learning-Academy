USE [IXL]
GO
/****** Object:  StoredProcedure [dbo].[sp_TrafficRankings_Insert]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP PROCEDURE IF EXISTS [dbo].[sp_TrafficRankings_Insert]
GO
/****** Object:  StoredProcedure [dbo].[sp_Insert_NewsletterSubscribeEmails]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP PROCEDURE IF EXISTS [dbo].[sp_Insert_NewsletterSubscribeEmails]
GO
/****** Object:  StoredProcedure [dbo].[sp_Insert_ContactMe]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP PROCEDURE IF EXISTS [dbo].[sp_Insert_ContactMe]
GO
/****** Object:  StoredProcedure [dbo].[sp_GetRankingUpdatesInfo]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP PROCEDURE IF EXISTS [dbo].[sp_GetRankingUpdatesInfo]
GO
/****** Object:  StoredProcedure [dbo].[sp_GetRankingUpdateInfo]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP PROCEDURE IF EXISTS [dbo].[sp_GetRankingUpdateInfo]
GO
/****** Object:  StoredProcedure [dbo].[ELMAH_LogError]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP PROCEDURE IF EXISTS [dbo].[ELMAH_LogError]
GO
/****** Object:  StoredProcedure [dbo].[ELMAH_GetErrorXml]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP PROCEDURE IF EXISTS [dbo].[ELMAH_GetErrorXml]
GO
/****** Object:  StoredProcedure [dbo].[ELMAH_GetErrorsXml]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP PROCEDURE IF EXISTS [dbo].[ELMAH_GetErrorsXml]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UserLogins]') AND type in (N'U'))
ALTER TABLE [dbo].[UserLogins] DROP CONSTRAINT IF EXISTS [FK_dbo.UserLogins_dbo.Users_IdentityUser_Id]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UserInRoles]') AND type in (N'U'))
ALTER TABLE [dbo].[UserInRoles] DROP CONSTRAINT IF EXISTS [FK_dbo.UserInRoles_dbo.Users_IdentityUser_Id]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UserInRoles]') AND type in (N'U'))
ALTER TABLE [dbo].[UserInRoles] DROP CONSTRAINT IF EXISTS [FK_dbo.UserInRoles_dbo.UserRoles_RoleId]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UserClaims]') AND type in (N'U'))
ALTER TABLE [dbo].[UserClaims] DROP CONSTRAINT IF EXISTS [FK_dbo.UserClaims_dbo.Users_IdentityUser_Id]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TrafficRankings]') AND type in (N'U'))
ALTER TABLE [dbo].[TrafficRankings] DROP CONSTRAINT IF EXISTS [DF__TrafficRa__IsAct__5A4F643B]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TrafficRankings]') AND type in (N'U'))
ALTER TABLE [dbo].[TrafficRankings] DROP CONSTRAINT IF EXISTS [DF__TrafficRa__Modif__595B4002]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Sitemap]') AND type in (N'U'))
ALTER TABLE [dbo].[Sitemap] DROP CONSTRAINT IF EXISTS [DF_Sitemap_LastModified]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Sitemap]') AND type in (N'U'))
ALTER TABLE [dbo].[Sitemap] DROP CONSTRAINT IF EXISTS [DF_Sitemap_LangId]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[NewsletterSubscribeEmails]') AND type in (N'U'))
ALTER TABLE [dbo].[NewsletterSubscribeEmails] DROP CONSTRAINT IF EXISTS [DF_NewsletterSubscribeEmails_Enable]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Languages]') AND type in (N'U'))
ALTER TABLE [dbo].[Languages] DROP CONSTRAINT IF EXISTS [DF_Languages_IsActive]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ELMAH_Error]') AND type in (N'U'))
ALTER TABLE [dbo].[ELMAH_Error] DROP CONSTRAINT IF EXISTS [DF_ELMAH_Error_ErrorId]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ContactMe]') AND type in (N'U'))
ALTER TABLE [dbo].[ContactMe] DROP CONSTRAINT IF EXISTS [DF_ContactMe_IsRead]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ContactMe]') AND type in (N'U'))
ALTER TABLE [dbo].[ContactMe] DROP CONSTRAINT IF EXISTS [DF_ContactMe_ModifyTime]
GO
/****** Object:  Index [UserNameIndex]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP INDEX IF EXISTS [UserNameIndex] ON [dbo].[Users]
GO
/****** Object:  Index [RoleNameIndex]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP INDEX IF EXISTS [RoleNameIndex] ON [dbo].[UserRoles]
GO
/****** Object:  Index [IX_IdentityUser_Id]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP INDEX IF EXISTS [IX_IdentityUser_Id] ON [dbo].[UserLogins]
GO
/****** Object:  Index [IX_RoleId]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP INDEX IF EXISTS [IX_RoleId] ON [dbo].[UserInRoles]
GO
/****** Object:  Index [IX_IdentityUser_Id]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP INDEX IF EXISTS [IX_IdentityUser_Id] ON [dbo].[UserInRoles]
GO
/****** Object:  Index [IX_IdentityUser_Id]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP INDEX IF EXISTS [IX_IdentityUser_Id] ON [dbo].[UserClaims]
GO
/****** Object:  Index [IX_TrafficRankings]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP INDEX IF EXISTS [IX_TrafficRankings] ON [dbo].[TrafficRankings]
GO
/****** Object:  Index [IX_ELMAH_Error_App_Time_Seq]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP INDEX IF EXISTS [IX_ELMAH_Error_App_Time_Seq] ON [dbo].[ELMAH_Error]
GO
/****** Object:  Index [PK_ELMAH_Error]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ELMAH_Error]') AND type in (N'U'))
ALTER TABLE [dbo].[ELMAH_Error] DROP CONSTRAINT IF EXISTS [PK_ELMAH_Error]
GO
/****** Object:  Table [dbo].[Users]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP TABLE IF EXISTS [dbo].[Users]
GO
/****** Object:  Table [dbo].[UserRoles]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP TABLE IF EXISTS [dbo].[UserRoles]
GO
/****** Object:  Table [dbo].[UserLogins]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP TABLE IF EXISTS [dbo].[UserLogins]
GO
/****** Object:  Table [dbo].[UserInRoles]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP TABLE IF EXISTS [dbo].[UserInRoles]
GO
/****** Object:  Table [dbo].[UserClaims]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP TABLE IF EXISTS [dbo].[UserClaims]
GO
/****** Object:  Table [dbo].[Sitemap]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP TABLE IF EXISTS [dbo].[Sitemap]
GO
/****** Object:  Table [dbo].[Setting]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP TABLE IF EXISTS [dbo].[Setting]
GO
/****** Object:  Table [dbo].[NewsletterSubscribeEmails]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP TABLE IF EXISTS [dbo].[NewsletterSubscribeEmails]
GO
/****** Object:  Table [dbo].[ELMAH_Error]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP TABLE IF EXISTS [dbo].[ELMAH_Error]
GO
/****** Object:  Table [dbo].[ContactMe]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP TABLE IF EXISTS [dbo].[ContactMe]
GO
/****** Object:  Table [dbo].[__MigrationHistory]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP TABLE IF EXISTS [dbo].[__MigrationHistory]
GO
/****** Object:  UserDefinedFunction [dbo].[udfv_LanguagesView]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP FUNCTION IF EXISTS [dbo].[udfv_LanguagesView]
GO
/****** Object:  Table [dbo].[Languages]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP TABLE IF EXISTS [dbo].[Languages]
GO
/****** Object:  UserDefinedFunction [dbo].[udft_TrafficRankings]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP FUNCTION IF EXISTS [dbo].[udft_TrafficRankings]
GO
/****** Object:  Table [dbo].[TrafficRankings]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP TABLE IF EXISTS [dbo].[TrafficRankings]
GO
/****** Object:  UserDefinedFunction [dbo].[GetSettingByKey]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP FUNCTION IF EXISTS [dbo].[GetSettingByKey]
GO
/****** Object:  User [admin]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP USER IF EXISTS [admin]
GO
USE [master]
GO
/****** Object:  Database [IXL]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
DROP DATABASE IF EXISTS [IXL]
GO
/****** Object:  Database [IXL]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
IF NOT EXISTS (SELECT name FROM sys.databases WHERE name = N'IXL')
BEGIN
CREATE DATABASE [IXL]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'IXL', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL12.MSSQLSERVER\MSSQL\DATA\IXL.mdf' , SIZE = 5312KB , MAXSIZE = UNLIMITED, FILEGROWTH = 10%)
 LOG ON 
( NAME = N'IXL_log', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL12.MSSQLSERVER\MSSQL\DATA\IXL_log.ldf' , SIZE = 2048KB , MAXSIZE = 2048GB , FILEGROWTH = 10%)
END

GO
ALTER DATABASE [IXL] SET COMPATIBILITY_LEVEL = 130
GO
IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [IXL].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO
ALTER DATABASE [IXL] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [IXL] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [IXL] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [IXL] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [IXL] SET ARITHABORT OFF 
GO
ALTER DATABASE [IXL] SET AUTO_CLOSE ON 
GO
ALTER DATABASE [IXL] SET AUTO_SHRINK ON 
GO
ALTER DATABASE [IXL] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [IXL] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [IXL] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [IXL] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [IXL] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [IXL] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [IXL] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [IXL] SET  DISABLE_BROKER 
GO
ALTER DATABASE [IXL] SET AUTO_UPDATE_STATISTICS_ASYNC ON 
GO
ALTER DATABASE [IXL] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [IXL] SET TRUSTWORTHY OFF 
GO
ALTER DATABASE [IXL] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO
ALTER DATABASE [IXL] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [IXL] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE [IXL] SET HONOR_BROKER_PRIORITY OFF 
GO
ALTER DATABASE [IXL] SET RECOVERY FULL 
GO
ALTER DATABASE [IXL] SET  MULTI_USER 
GO
ALTER DATABASE [IXL] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [IXL] SET DB_CHAINING OFF 
GO
ALTER DATABASE [IXL] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF ) 
GO
ALTER DATABASE [IXL] SET TARGET_RECOVERY_TIME = 0 SECONDS 
GO
ALTER DATABASE [IXL] SET DELAYED_DURABILITY = DISABLED 
GO
EXEC sys.sp_db_vardecimal_storage_format N'IXL', N'ON'
GO
ALTER DATABASE [IXL] SET QUERY_STORE = OFF
GO
USE [IXL]
GO
ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
GO
ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
GO
ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
GO
ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
GO
ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
GO
ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
GO
ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
GO
ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
GO
USE [IXL]
GO
/****** Object:  User [admin]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
IF NOT EXISTS (SELECT * FROM sys.database_principals WHERE name = N'admin')
CREATE USER [admin] FOR LOGIN [admin] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  UserDefinedFunction [dbo].[GetSettingByKey]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetSettingByKey]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'
CREATE FUNCTION [dbo].[GetSettingByKey]
(
	@Key NVARCHAR(256)
)
RETURNS NVARCHAR(MAX)
AS


BEGIN
	DECLARE @result NVARCHAR(MAX) = ''''; 
	
	SELECT @result = as1.[Value]
	FROM   [xomorod.com_xomorod].dbo.Setting as1
	WHERE  LOWER(as1.[Key]) = LOWER(@Key)
	
	RETURN @result;
END

' 
END

GO
/****** Object:  Table [dbo].[TrafficRankings]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TrafficRankings]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TrafficRankings](
	[RankID] [int] IDENTITY(1,1) NOT NULL,
	[ModifyDate] [datetime] NOT NULL,
	[GlobalRanking] [int] NULL,
	[IranRanking] [int] NULL,
	[IsActive] [bit] NOT NULL,
 CONSTRAINT [PK__TrafficR__B37AFB96CB2473E2] PRIMARY KEY CLUSTERED 
(
	[RankID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  UserDefinedFunction [dbo].[udft_TrafficRankings]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[udft_TrafficRankings]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'
CREATE FUNCTION [dbo].[udft_TrafficRankings]
(
)
RETURNS TABLE
AS


RETURN 
(
    WITH MyCTE AS
    (
        SELECT d.ModifyDate       AS MDate,
               MAX(d.ModifyTime)  AS MTime
        FROM   (
                   SELECT CONVERT(DATE, tr.ModifyDate) AS ModifyDate,
                          CONVERT(TIME, tr.ModifyDate) AS ModifyTime
                   FROM   TrafficRankings tr
               )                     d
        GROUP BY d.ModifyDate
    )
    SELECT RankID,
    ModifyDate,
    GlobalRanking,
    IranRanking
    FROM dbo.TrafficRankings
    INNER JOIN MyCTE
    ON MyCTE.MDate = CONVERT(DATE, dbo.TrafficRankings.ModifyDate)
    AND MyCTE.MTime = CONVERT(TIME, dbo.TrafficRankings.ModifyDate)
    AND IsActive = 1
)

' 
END

GO
/****** Object:  Table [dbo].[Languages]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Languages]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[Languages](
	[LangID] [int] IDENTITY(1,1) NOT NULL,
	[LangFullName] [nvarchar](50) NOT NULL,
	[Culture] [varchar](5) NOT NULL,
	[IsActive] [bit] NOT NULL,
 CONSTRAINT [PK_Languages] PRIMARY KEY CLUSTERED 
(
	[LangID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  UserDefinedFunction [dbo].[udfv_LanguagesView]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[udfv_LanguagesView]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'

CREATE FUNCTION [dbo].[udfv_LanguagesView] ( )
RETURNS TABLE
AS


RETURN
    ( SELECT    [LangID] ,
                [Culture] ,
                [LangFullName]
      FROM      dbo.Languages
      WHERE     IsActive = 1
    )

' 
END

GO
/****** Object:  Table [dbo].[__MigrationHistory]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[__MigrationHistory]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[__MigrationHistory](
	[MigrationId] [nvarchar](150) NOT NULL,
	[ContextKey] [nvarchar](300) NOT NULL,
	[Model] [varbinary](max) NOT NULL,
	[ProductVersion] [nvarchar](32) NOT NULL,
 CONSTRAINT [PK_dbo.__MigrationHistory] PRIMARY KEY CLUSTERED 
(
	[MigrationId] ASC,
	[ContextKey] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[ContactMe]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ContactMe]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[ContactMe](
	[ContactMeID] [int] IDENTITY(1,1) NOT NULL,
	[Name] [nvarchar](max) NULL,
	[Email] [nvarchar](max) NULL,
	[Subject] [nvarchar](max) NULL,
	[Message] [nvarchar](max) NULL,
	[ModifyUTC] [datetime] NOT NULL,
	[UserId] [nvarchar](128) NOT NULL,
	[IsRead] [bit] NOT NULL,
 CONSTRAINT [PK_ContactMe] PRIMARY KEY CLUSTERED 
(
	[ContactMeID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[ELMAH_Error]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ELMAH_Error]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[ELMAH_Error](
	[ErrorId] [uniqueidentifier] NOT NULL,
	[Application] [nvarchar](60) NOT NULL,
	[Host] [nvarchar](50) NOT NULL,
	[Type] [nvarchar](100) NOT NULL,
	[Source] [nvarchar](60) NOT NULL,
	[Message] [nvarchar](500) NOT NULL,
	[User] [nvarchar](50) NOT NULL,
	[StatusCode] [int] NOT NULL,
	[TimeUtc] [datetime] NOT NULL,
	[Sequence] [int] IDENTITY(1,1) NOT NULL,
	[AllXml] [ntext] NOT NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[NewsletterSubscribeEmails]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[NewsletterSubscribeEmails]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[NewsletterSubscribeEmails](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[EmailAddress] [nvarchar](128) NOT NULL,
	[Enable] [bit] NOT NULL,
 CONSTRAINT [PK_NewsletterSubscribeEmails_Email] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[Setting]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Setting]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[Setting](
	[Key] [nvarchar](100) NOT NULL,
	[Value] [nvarchar](max) NULL,
 CONSTRAINT [PK_Setting] PRIMARY KEY CLUSTERED 
(
	[Key] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[Sitemap]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Sitemap]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[Sitemap](
	[Id] [bigint] NOT NULL,
	[LangId] [int] NOT NULL,
	[Title] [nvarchar](4000) NULL,
	[Frequency] [varchar](10) NULL,
	[LastModified] [datetime] NOT NULL,
	[Priority] [numeric](18, 2) NULL,
	[Url] [varchar](4000) NULL,
	[ParentId] [bigint] NULL,
 CONSTRAINT [PK_Sitemap_1] PRIMARY KEY CLUSTERED 
(
	[Id] ASC,
	[LangId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[UserClaims]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UserClaims]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[UserClaims](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[UserId] [nvarchar](max) NULL,
	[ClaimType] [nvarchar](max) NULL,
	[ClaimValue] [nvarchar](max) NULL,
	[IdentityUser_Id] [nvarchar](128) NULL,
 CONSTRAINT [PK_dbo.UserClaims] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[UserInRoles]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UserInRoles]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[UserInRoles](
	[UserId] [nvarchar](128) NOT NULL,
	[RoleId] [nvarchar](128) NOT NULL,
	[IdentityUser_Id] [nvarchar](128) NULL,
 CONSTRAINT [PK_dbo.UserInRoles] PRIMARY KEY CLUSTERED 
(
	[UserId] ASC,
	[RoleId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[UserLogins]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UserLogins]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[UserLogins](
	[LoginProvider] [nvarchar](128) NOT NULL,
	[ProviderKey] [nvarchar](128) NOT NULL,
	[UserId] [nvarchar](128) NOT NULL,
	[IdentityUser_Id] [nvarchar](128) NULL,
 CONSTRAINT [PK_dbo.UserLogins] PRIMARY KEY CLUSTERED 
(
	[LoginProvider] ASC,
	[ProviderKey] ASC,
	[UserId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[UserRoles]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[UserRoles]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[UserRoles](
	[Id] [nvarchar](128) NOT NULL,
	[Name] [nvarchar](256) NOT NULL,
 CONSTRAINT [PK_dbo.UserRoles] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[Users]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Users]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[Users](
	[Id] [nvarchar](128) NOT NULL,
	[Email] [nvarchar](256) NULL,
	[EmailConfirmed] [bit] NOT NULL,
	[PasswordHash] [nvarchar](max) NULL,
	[SecurityStamp] [nvarchar](max) NULL,
	[PhoneNumber] [nvarchar](max) NULL,
	[PhoneNumberConfirmed] [bit] NOT NULL,
	[TwoFactorEnabled] [bit] NOT NULL,
	[LockoutEndDateUtc] [datetime] NULL,
	[LockoutEnabled] [bit] NOT NULL,
	[AccessFailedCount] [int] NOT NULL,
	[UserName] [nvarchar](256) NOT NULL,
	[Discriminator] [nvarchar](128) NOT NULL,
 CONSTRAINT [PK_dbo.Users] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
END
GO
INSERT [dbo].[__MigrationHistory] ([MigrationId], [ContextKey], [Model], [ProductVersion]) VALUES (N'201702041756334_InitialCreate', N'IXL.Migrations.Configuration', 0x
GO
SET IDENTITY_INSERT [dbo].[Languages] ON 

GO
INSERT [dbo].[Languages] ([LangID], [LangFullName], [Culture], [IsActive]) VALUES (1, N'English', N'en', 1)
GO
INSERT [dbo].[Languages] ([LangID], [LangFullName], [Culture], [IsActive]) VALUES (2, N'فارسی', N'fa', 1)
GO
INSERT [dbo].[Languages] ([LangID], [LangFullName], [Culture], [IsActive]) VALUES (3, N'France', N'fr', 0)
GO
INSERT [dbo].[Languages] ([LangID], [LangFullName], [Culture], [IsActive]) VALUES (5, N'German', N'de', 0)
GO
INSERT [dbo].[Languages] ([LangID], [LangFullName], [Culture], [IsActive]) VALUES (6, N'Español', N'es', 0)
GO
INSERT [dbo].[Languages] ([LangID], [LangFullName], [Culture], [IsActive]) VALUES (7, N'Turkish ', N'tr', 0)
GO
INSERT [dbo].[Languages] ([LangID], [LangFullName], [Culture], [IsActive]) VALUES (8, N'Azerbaijan', N'az', 0)
GO
SET IDENTITY_INSERT [dbo].[Languages] OFF
GO
INSERT [dbo].[UserRoles] ([Id], [Name]) VALUES (N'ed28bedb-33d0-4afc-92e3-272f63b6d66c', N'Admin')
GO
INSERT [dbo].[UserRoles] ([Id], [Name]) VALUES (N'0465b225-4ea1-41dc-9187-a551ad28df87', N'Common')
GO
INSERT [dbo].[UserRoles] ([Id], [Name]) VALUES (N'4bcc9ce5-f7d9-4bc5-a847-81276b1ae872', N'NoAccess')
GO
INSERT [dbo].[Users] ([Id], [Email], [EmailConfirmed], [PasswordHash], [SecurityStamp], [PhoneNumber], [PhoneNumberConfirmed], [TwoFactorEnabled], [LockoutEndDateUtc], [LockoutEnabled], [AccessFailedCount], [UserName], [Discriminator]) VALUES (N'bfdd394c-bc6d-4733-947c-a6bc7486cfb0', N'behzad.khosravifar@gmail.com', 0, N'AEmo0bAhszLYmkqn3r1a9RFMGPDTZyauwvtCbGv5AzRVLWjTkysryl+mxjd25JRrNw==', N'a7e5b5ed-c74f-438a-a961-b5f021775f12', NULL, 0, 0, NULL, 1, 0, N'behzad.khosravifar@gmail.com', N'ApplicationUser')
GO
/****** Object:  Index [PK_ELMAH_Error]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ELMAH_Error]') AND name = N'PK_ELMAH_Error')
ALTER TABLE [dbo].[ELMAH_Error] ADD  CONSTRAINT [PK_ELMAH_Error] PRIMARY KEY NONCLUSTERED 
(
	[ErrorId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON

GO
/****** Object:  Index [IX_ELMAH_Error_App_Time_Seq]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ELMAH_Error]') AND name = N'IX_ELMAH_Error_App_Time_Seq')
CREATE NONCLUSTERED INDEX [IX_ELMAH_Error_App_Time_Seq] ON [dbo].[ELMAH_Error]
(
	[Application] ASC,
	[TimeUtc] DESC,
	[Sequence] DESC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [IX_TrafficRankings]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[TrafficRankings]') AND name = N'IX_TrafficRankings')
CREATE NONCLUSTERED INDEX [IX_TrafficRankings] ON [dbo].[TrafficRankings]
(
	[ModifyDate] ASC,
	[RankID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON

GO
/****** Object:  Index [IX_IdentityUser_Id]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[UserClaims]') AND name = N'IX_IdentityUser_Id')
CREATE NONCLUSTERED INDEX [IX_IdentityUser_Id] ON [dbo].[UserClaims]
(
	[IdentityUser_Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON

GO
/****** Object:  Index [IX_IdentityUser_Id]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[UserInRoles]') AND name = N'IX_IdentityUser_Id')
CREATE NONCLUSTERED INDEX [IX_IdentityUser_Id] ON [dbo].[UserInRoles]
(
	[IdentityUser_Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON

GO
/****** Object:  Index [IX_RoleId]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[UserInRoles]') AND name = N'IX_RoleId')
CREATE NONCLUSTERED INDEX [IX_RoleId] ON [dbo].[UserInRoles]
(
	[RoleId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON

GO
/****** Object:  Index [IX_IdentityUser_Id]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[UserLogins]') AND name = N'IX_IdentityUser_Id')
CREATE NONCLUSTERED INDEX [IX_IdentityUser_Id] ON [dbo].[UserLogins]
(
	[IdentityUser_Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON

GO
/****** Object:  Index [RoleNameIndex]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[UserRoles]') AND name = N'RoleNameIndex')
CREATE UNIQUE NONCLUSTERED INDEX [RoleNameIndex] ON [dbo].[UserRoles]
(
	[Name] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON

GO
/****** Object:  Index [UserNameIndex]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[Users]') AND name = N'UserNameIndex')
CREATE UNIQUE NONCLUSTERED INDEX [UserNameIndex] ON [dbo].[Users]
(
	[UserName] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DF_ContactMe_ModifyTime]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[ContactMe] ADD  CONSTRAINT [DF_ContactMe_ModifyTime]  DEFAULT (getutcdate()) FOR [ModifyUTC]
END

GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DF_ContactMe_IsRead]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[ContactMe] ADD  CONSTRAINT [DF_ContactMe_IsRead]  DEFAULT ((0)) FOR [IsRead]
END

GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DF_ELMAH_Error_ErrorId]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[ELMAH_Error] ADD  CONSTRAINT [DF_ELMAH_Error_ErrorId]  DEFAULT (newid()) FOR [ErrorId]
END

GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DF_Languages_IsActive]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Languages] ADD  CONSTRAINT [DF_Languages_IsActive]  DEFAULT ((1)) FOR [IsActive]
END

GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DF_NewsletterSubscribeEmails_Enable]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[NewsletterSubscribeEmails] ADD  CONSTRAINT [DF_NewsletterSubscribeEmails_Enable]  DEFAULT ((1)) FOR [Enable]
END

GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DF_Sitemap_LangId]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Sitemap] ADD  CONSTRAINT [DF_Sitemap_LangId]  DEFAULT ((1)) FOR [LangId]
END

GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DF_Sitemap_LastModified]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[Sitemap] ADD  CONSTRAINT [DF_Sitemap_LastModified]  DEFAULT (getutcdate()) FOR [LastModified]
END

GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DF__TrafficRa__Modif__595B4002]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[TrafficRankings] ADD  CONSTRAINT [DF__TrafficRa__Modif__595B4002]  DEFAULT (getdate()) FOR [ModifyDate]
END

GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DF__TrafficRa__IsAct__5A4F643B]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[TrafficRankings] ADD  CONSTRAINT [DF__TrafficRa__IsAct__5A4F643B]  DEFAULT ((1)) FOR [IsActive]
END

GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_dbo.UserClaims_dbo.Users_IdentityUser_Id]') AND parent_object_id = OBJECT_ID(N'[dbo].[UserClaims]'))
ALTER TABLE [dbo].[UserClaims]  WITH CHECK ADD  CONSTRAINT [FK_dbo.UserClaims_dbo.Users_IdentityUser_Id] FOREIGN KEY([IdentityUser_Id])
REFERENCES [dbo].[Users] ([Id])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_dbo.UserClaims_dbo.Users_IdentityUser_Id]') AND parent_object_id = OBJECT_ID(N'[dbo].[UserClaims]'))
ALTER TABLE [dbo].[UserClaims] CHECK CONSTRAINT [FK_dbo.UserClaims_dbo.Users_IdentityUser_Id]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_dbo.UserInRoles_dbo.UserRoles_RoleId]') AND parent_object_id = OBJECT_ID(N'[dbo].[UserInRoles]'))
ALTER TABLE [dbo].[UserInRoles]  WITH CHECK ADD  CONSTRAINT [FK_dbo.UserInRoles_dbo.UserRoles_RoleId] FOREIGN KEY([RoleId])
REFERENCES [dbo].[UserRoles] ([Id])
ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_dbo.UserInRoles_dbo.UserRoles_RoleId]') AND parent_object_id = OBJECT_ID(N'[dbo].[UserInRoles]'))
ALTER TABLE [dbo].[UserInRoles] CHECK CONSTRAINT [FK_dbo.UserInRoles_dbo.UserRoles_RoleId]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_dbo.UserInRoles_dbo.Users_IdentityUser_Id]') AND parent_object_id = OBJECT_ID(N'[dbo].[UserInRoles]'))
ALTER TABLE [dbo].[UserInRoles]  WITH CHECK ADD  CONSTRAINT [FK_dbo.UserInRoles_dbo.Users_IdentityUser_Id] FOREIGN KEY([IdentityUser_Id])
REFERENCES [dbo].[Users] ([Id])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_dbo.UserInRoles_dbo.Users_IdentityUser_Id]') AND parent_object_id = OBJECT_ID(N'[dbo].[UserInRoles]'))
ALTER TABLE [dbo].[UserInRoles] CHECK CONSTRAINT [FK_dbo.UserInRoles_dbo.Users_IdentityUser_Id]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_dbo.UserLogins_dbo.Users_IdentityUser_Id]') AND parent_object_id = OBJECT_ID(N'[dbo].[UserLogins]'))
ALTER TABLE [dbo].[UserLogins]  WITH CHECK ADD  CONSTRAINT [FK_dbo.UserLogins_dbo.Users_IdentityUser_Id] FOREIGN KEY([IdentityUser_Id])
REFERENCES [dbo].[Users] ([Id])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_dbo.UserLogins_dbo.Users_IdentityUser_Id]') AND parent_object_id = OBJECT_ID(N'[dbo].[UserLogins]'))
ALTER TABLE [dbo].[UserLogins] CHECK CONSTRAINT [FK_dbo.UserLogins_dbo.Users_IdentityUser_Id]
GO
/****** Object:  StoredProcedure [dbo].[ELMAH_GetErrorsXml]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ELMAH_GetErrorsXml]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[ELMAH_GetErrorsXml] AS' 
END
GO

ALTER PROCEDURE [dbo].[ELMAH_GetErrorsXml]
(
    @Application NVARCHAR(60),
    @PageIndex INT = 0,
    @PageSize INT = 15,
    @TotalCount INT OUTPUT
)
AS 

    SET NOCOUNT ON

    DECLARE @FirstTimeUTC DATETIME
    DECLARE @FirstSequence INT
    DECLARE @StartRow INT
    DECLARE @StartRowIndex INT

    SELECT 
        @TotalCount = COUNT(1) 
    FROM 
        [ELMAH_Error]
    WHERE 
        [Application] = @Application

    -- Get the ID of the first error for the requested page

    SET @StartRowIndex = @PageIndex * @PageSize + 1

    IF @StartRowIndex <= @TotalCount
    BEGIN

        SET ROWCOUNT @StartRowIndex

        SELECT  
            @FirstTimeUTC = [TimeUtc],
            @FirstSequence = [Sequence]
        FROM 
            [ELMAH_Error]
        WHERE   
            [Application] = @Application
        ORDER BY 
            [TimeUtc] DESC, 
            [Sequence] DESC

    END
    ELSE
    BEGIN

        SET @PageSize = 0

    END

    -- Now set the row count to the requested page size and get
    -- all records below it for the pertaining application.

    SET ROWCOUNT @PageSize

    SELECT 
        errorId     = [ErrorId], 
        application = [Application],
        host        = [Host], 
        type        = [Type],
        source      = [Source],
        message     = [Message],
        [user]      = [User],
        statusCode  = [StatusCode], 
        time        = CONVERT(VARCHAR(50), [TimeUtc], 126) + 'Z'
    FROM 
        [ELMAH_Error] error
    WHERE
        [Application] = @Application
    AND
        [TimeUtc] <= @FirstTimeUTC
    AND 
        [Sequence] <= @FirstSequence
    ORDER BY
        [TimeUtc] DESC, 
        [Sequence] DESC
    FOR
        XML AUTO


GO
/****** Object:  StoredProcedure [dbo].[ELMAH_GetErrorXml]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ELMAH_GetErrorXml]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[ELMAH_GetErrorXml] AS' 
END
GO

ALTER PROCEDURE [dbo].[ELMAH_GetErrorXml]
(
    @Application NVARCHAR(60),
    @ErrorId UNIQUEIDENTIFIER
)
AS

    SET NOCOUNT ON

    SELECT 
        [AllXml]
    FROM 
        [ELMAH_Error]
    WHERE
        [ErrorId] = @ErrorId
    AND
        [Application] = @Application


GO
/****** Object:  StoredProcedure [dbo].[ELMAH_LogError]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ELMAH_LogError]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[ELMAH_LogError] AS' 
END
GO

ALTER PROCEDURE [dbo].[ELMAH_LogError]
(
    @ErrorId UNIQUEIDENTIFIER,
    @Application NVARCHAR(60),
    @Host NVARCHAR(30),
    @Type NVARCHAR(100),
    @Source NVARCHAR(60),
    @Message NVARCHAR(500),
    @User NVARCHAR(50),
    @AllXml NTEXT,
    @StatusCode INT,
    @TimeUtc DATETIME
)
AS

    SET NOCOUNT ON

    INSERT
    INTO
        [ELMAH_Error]
        (
            [ErrorId],
            [Application],
            [Host],
            [Type],
            [Source],
            [Message],
            [User],
            [AllXml],
            [StatusCode],
            [TimeUtc]
        )
    VALUES
        (
            @ErrorId,
            @Application,
            @Host,
            @Type,
            @Source,
            @Message,
            @User,
            @AllXml,
            @StatusCode,
            @TimeUtc
        )


GO
/****** Object:  StoredProcedure [dbo].[sp_GetRankingUpdateInfo]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sp_GetRankingUpdateInfo]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[sp_GetRankingUpdateInfo] AS' 
END
GO

ALTER PROCEDURE [dbo].[sp_GetRankingUpdateInfo]
	@DayDate DATETIME
AS
BEGIN
	SELECT tr.RankID,
	       tr.ModifyDate,
	       CONVERT(TIME, tr2.ModifyDate),
	       tr.GlobalRanking,
	       tr.IranRanking,
	       tr.IsActive,
	       DATEDIFF(second, tr2.ModifyDate, tr.ModifyDate) AS TimerDurSec,
	       DATEDIFF(MINUTE, tr2.ModifyDate, tr.ModifyDate) AS TimerDurMin
	FROM   dbo.TrafficRankings tr,
	       dbo.TrafficRankings tr2
	WHERE  tr.ModifyDate > @DayDate
	       AND tr2.ModifyDate > @DayDate
	       AND tr.RankID = tr2.RankID + 1
	ORDER BY
	       tr2.ModifyDate DESC
END



GO
/****** Object:  StoredProcedure [dbo].[sp_GetRankingUpdatesInfo]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sp_GetRankingUpdatesInfo]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[sp_GetRankingUpdatesInfo] AS' 
END
GO

ALTER PROCEDURE [dbo].[sp_GetRankingUpdatesInfo]
	@DayDate DATETIME
AS
BEGIN
	DECLARE @temp TABLE (
	            RankID BIGINT,
	            ModifyDate DATETIME,
	            NextTime TIME,
	            GlobalRanking INT,
	            IranRanking INT,
	            IsActive BIT,
	            TimerDurSec INT,
	            TimerDurMin INT
	        )
	
	INSERT INTO @temp
	SELECT tr.RankID,
	       tr.ModifyDate,
	       tr2.ModifyDate AS PreviewsDate,
	       tr.GlobalRanking,
	       tr.IranRanking,
	       tr.IsActive,
	       DATEDIFF(second, tr2.ModifyDate, tr.ModifyDate) AS TimerDurSec,
	       DATEDIFF(MINUTE, tr2.ModifyDate, tr.ModifyDate) AS TimerDurMin
	FROM   [xomorod.com_xomorod].dbo.TrafficRankings tr,
	       [xomorod.com_xomorod].dbo.TrafficRankings tr2
	WHERE  tr.ModifyDate > @DayDate
	       AND tr2.ModifyDate > @DayDate
	       AND tr.RankID = tr2.RankID + 1
	ORDER BY
	       tr2.ModifyDate DESC
	
	SELECT * FROM @temp
	
	SELECT SUM(t.TimerDurSec) / COUNT(1)  AS AverageTimeDurSec
	FROM   @temp                             t
	WHERE  t.TimerDurSec > 2 -- less lower bound
END



GO
/****** Object:  StoredProcedure [dbo].[sp_Insert_ContactMe]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sp_Insert_ContactMe]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[sp_Insert_ContactMe] AS' 
END
GO
-- =============================================
-- Author:		Behzad Khosravifar
-- Create date: 2016/06/07
-- Description:	Insert data in to ContactMe table
-- =============================================
ALTER PROCEDURE [dbo].[sp_Insert_ContactMe]
    @name NVARCHAR(MAX) ,
    @email NVARCHAR(MAX) ,
    @subject NVARCHAR(MAX) ,
    @message NVARCHAR(MAX)
AS
    BEGIN
        BEGIN TRY
            BEGIN TRANSACTION
            INSERT  INTO [dbo].[ContactMe]
                    ( [Name] ,
                      [Email] ,
                      [Subject] ,
                      [Message],
					  [UserId]
                    )
            VALUES  ( @name ,
                      @email ,
                      @subject ,
                      @message,
					  dbo.fn_GetFirstAdminUserID()
                    )

            COMMIT TRANSACTION
        END TRY 
        BEGIN CATCH
		-- IF @@TRANCOUNT > 0
            IF XACT_STATE() <> 0
                ROLLBACK TRANSACTION	
			
            DECLARE @err_msg NVARCHAR(MAX) = ERROR_MESSAGE();

            RAISERROR(@err_msg, 18, 255);
        END CATCH
    END



GO
/****** Object:  StoredProcedure [dbo].[sp_Insert_NewsletterSubscribeEmails]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sp_Insert_NewsletterSubscribeEmails]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[sp_Insert_NewsletterSubscribeEmails] AS' 
END
GO
-- =============================================
-- Author:		Behzad Khosravifar
-- Create date: 2016.06.09
-- Description:	Insert into NewsletterSubscribeEmails table's
-- =============================================
ALTER PROCEDURE [dbo].[sp_Insert_NewsletterSubscribeEmails]
	@Email NVARCHAR(128)
AS
BEGIN
	IF EXISTS (
	       SELECT 1
	       FROM   [dbo].[NewsletterSubscribeEmails]
	       WHERE  EmailAddress = LOWER(@Email)
	   )
	    RAISERROR(N'DuplicateEmailError', 18, 1)
	ELSE
	BEGIN
	    INSERT INTO [dbo].[NewsletterSubscribeEmails]
	      (
	        [EmailAddress]
	      )
	    VALUES
	      (
	        LOWER(@Email)
	      )
	END
END



GO
/****** Object:  StoredProcedure [dbo].[sp_TrafficRankings_Insert]    Script Date: 16/11/1395 09:29:18 ب.ظ ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sp_TrafficRankings_Insert]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[sp_TrafficRankings_Insert] AS' 
END
GO

ALTER PROCEDURE [dbo].[sp_TrafficRankings_Insert]
    @GlobalRank INT ,
    @IranRank INT
AS
    BEGIN
        BEGIN TRY
            BEGIN TRANSACTION
		
            IF NOT EXISTS ( SELECT TOP ( 1 )
                                    1
                            FROM    TrafficRankings tr
                            WHERE   CONVERT(DATE, tr.ModifyDate) = CONVERT(DATE, GETDATE())
                                    AND tr.GlobalRanking = @GlobalRank
                                    AND tr.IranRanking = @IranRank
                                    AND tr.IsActive = 1 )
                BEGIN
                    INSERT  INTO TrafficRankings
                            ( -- RankID -- this column value is auto-generated
                              GlobalRanking ,
                              IranRanking ,
                              IsActive
		                    )
                    VALUES  ( @GlobalRank ,
                              @IranRank ,
                              1
		                    )
                END
		
            COMMIT TRANSACTION
        END TRY
        BEGIN CATCH
            ROLLBACK TRANSACTION
		
            DECLARE @err_msg NVARCHAR(MAX) = ERROR_MESSAGE();

            RAISERROR(@err_msg, 18, 255);
        END CATCH
    END



GO
USE [master]
GO
ALTER DATABASE [IXL] SET  READ_WRITE 
GO
